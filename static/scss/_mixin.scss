@function str-replace($string, $search, $replace: ''){
    $index: str-index($string, $search);

    @if $index{
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

//rem 기준 사용 (px to rem)
@function px-to-rem($value){
    @if type-of($value) == "number" {
        @if (unitless($value)) {
            @return $value;
        } @else if unit($value) == "rem"{
            @return $value;
        } @else if unit($value) == "px" {
            @return ($value / 1px) / 10 * 1rem;
        } @else if unit($value) == "%" {
            @return $value;
        } @else {
            @return $value;
        }
    } @else {
        @if $value == "auto" {
            @return $value;
        }@else{
            @warn "Not a number value: #{$value}";
        }
    }
}
@function rem-to-px($value){
    @if type-of($value) == "number" {
        @if (unitless($value)) {
            @return $value;
        } @else if unit($value) == "rem"{
            @return ($value / 1rem) * 10 * 1px;
        } @else if unit($value) == "px" {
            @return $value;
        } @else if unit($value) == "%" {
            @return $value;
        } @else {
            @return $value;
        }
    } @else {
        @if $value == "auto" {
            @return $value;
        }@else{
            @warn "Not a number value: #{$value}";
        }
    }
}
//rem 기준 비교로 사용 (px to rem)
@function remove-units($value){
    @if type-of($value) == "number" {
        @if (unitless($value)) {
            @return $value;
        } @else if unit($value) == "rem"{            
            @return $value / 1rem;
        } @else if unit($value) == "px" {
            @return ($value / 1px) / 10;
        } @else if unit($value) == "%" {
            @return $value;
        }
    } @else {
        @if $value == "auto" {
            @return $value;
        }@else{
            @warn "Not a number value: #{$value}";
        }
    }
}

//360px 미만 디바이스 (320px 고려)
@mixin smallDevice {
    @media (max-width: #{$breakpoint-small-desktop}) {
        @content;
    }
}

//Heading
@mixin heading($size : 18px, $line-height: 1.4, $weight : bold) {
    font-size:px-to-rem($size);
    font-weight: $weight;
    @if(remove-units($size) == remove-units($heading01)){
        line-height:3.9rem;
    }@else if(remove-units($size) == remove-units($heading02)){
        line-height:3.3rem;
    }@else if(remove-units($size) == remove-units($heading03)){
        line-height:2.8rem;
    }@else if(remove-units($size) == remove-units($heading04)){
        line-height:2.5rem;
    }@else{
        line-height:px-to-rem($line-height);
    }
}

//Text ($disabled : 흐린 텍스트)
@mixin text($size : $text02, $weight : normal, $line-height: 1.4) {
    font-size: px-to-rem($size);
    font-weight: $weight;    

    @if (remove-units($size) == remove-units($text01)){
        line-height: 2.5rem;
    }@else if (remove-units($size) == remove-units($text02)){
        line-height:2.3rem;
    }@else if (remove-units($size) == remove-units($text03)){
        line-height:2.0rem;
        letter-spacing: -0.01em;
    }@else{
        line-height:px-to-rem($line-height);
    }
    
    //disabled
    .is-disabled,
    :disabled{
        color:$text-color-blur;
    }
}

//숫자
@mixin number($size: 17px, $weight : normal, $line-height: 1.4) {
    font-family:'Roboto';
    font-size: px-to-rem($size);
    line-height:px-to-rem($line-height);
    @if(remove-units($size) >= remove-units($text01)){
        font-weight: bold;
    }@else{
        font-weight: $weight;
    }
}

// ICON
// X 닫기 버튼
@mixin iconCancel($size: 24px, $thick: 2px, $color: #000, $padding: 0, $display:inline-block, $position: relative){
    position : $position;
    display: $display;
    width: $size + $padding * 2;
    height: $size + $padding * 2;
    &:before, &:after{
        content:'';
        position:absolute;
        top:50%;
        left:50%;
        width:round($size * $sqrt_2 - $thick);
        height: $thick;
        background-color: $color;
    }

    &:before{
        transform:translate(-50%, -50%) rotate(45deg);
    }
    &:after{
        transform:translate(-50%, -50%) rotate(135deg);
    }
    & > span{
        overflow:hidden;
        display:block;
        text-indent:100%;
        white-space:nowrap;
    }
}

// 꽉찬 삼각형
@mixin iconTriangle($direction : 'up', $width: 20px, $height: 10px, $color: #000, $display: inline-block){
    display: $display;
    width: $width;
    height: $height;
    &:before{
        content:'';
        display:block;
        @if ($direction == 'up'){
            border-bottom: $height solid $color;
            border-left: round( $width / 2 ) solid transparent;
            border-right: round( $width / 2 ) solid transparent;
        }
        @else if($direction == 'down'){
            border-top: $height solid $color;
            border-left: round( $width / 2 ) solid transparent;
            border-right: round( $width / 2 ) solid transparent;
        }
        @else if($direction == 'left'){
            border-right: $width solid $color;
            border-top: round( $height / 2 ) solid transparent;
            border-bottom: round( $height / 2 ) solid transparent;
        }
        @else if($direction == 'right'){
            border-left: $width solid $color;
            border-top: round( $height / 2 ) solid transparent;
            border-bottom: round( $height / 2 ) solid transparent;
        }
    }
}

//화살표 모양
@mixin iconBullet($direction: 'up', $width: 50px, $height : 25px, $thick : 2px, $color : #000, $display: inline-block, $position: relative){
    position: $position;
    display: $display;
    width: $width;
    height: $height;

    @if ($direction == 'up' or $direction == 'down'){
        $size: floor( $width / $sqrt_2 - 2 * $thick);        
        $rate: 2 * $height / $width;
        $margin-top: round( $rate * $size / ( 2 * $sqrt_2 ));

        &:before{
            content:'';
            position:absolute;
            top:50%;
            left:50%;
            width: $size;
            height: $size;

            @if ($rate == 1){
                transform: translate(-50%, -50%) rotate(45deg);
            }@else{
                transform:translate(-50%, -50%) scale(1, $rate) rotate(45deg);
            }

            @if ($direction == 'up'){
                margin-top: $margin-top;
                border-top: $thick solid $color;
                border-left: $thick solid $color;
            }@else if($direction == 'down'){
                margin-top: - $margin-top;
                border-right: $thick solid $color;
                border-bottom: $thick solid $color;
            }
        }
    }@else if($direction == 'left' or $direction == 'right'){
        $size: floor( $height / $sqrt_2 - 2 * $thick);
        $rate: 2 * $width / $height;
        $margin-left: round( $rate * $size / ( 2 * $sqrt_2 ) );

        &:before{
            content:'';
            position:absolute;
            top:50%;
            left:50%;
            width: $size;
            height:$size;

            @if($rate == 1){
                transform:translate(-50%, -50%) rotate(45deg);
            }@else{
                transform:translate(-50%, -50%) scale($rate, 1) rotate(45deg);
            }

            @if($direction == 'left'){
                margin-left: $margin-left;
                border-left: $thick solid $color;
                border-bottom: $thick solid $color;
            }@else if($direction == 'right'){
                margin-left: - $margin-left;
                border-top: $thick solid $color;
                border-right: $thick solid $color;
            }

        }
    }
}

//더하기 모양
@mixin iconPlus( $width: 12px, $height : 12px, $thick : 2px, $background-color : #484b51, $display: inline-block, $position: relative){
    position: $position;
    display: $display;
    width: $width;
    height: $height;

    &:before,
    &:after{
        position:absolute;
        content:'';
        display:block;
        background-color:$background-color;
        border-radius:50%;
    }
    &:before{
        width:100%;height:$thick;top:50%;left:0;transform:translateY(-50%);
    }
    &:after{
        width:$thick;height:100%;top:0;left:50%;transform:translateX(-50%);
    }
}

//Float 해제
@mixin clfix{
    &:after{
        content:'';
        display:block;
        clear:both;
    }
}

//IR기법 텍스트 숨김
@mixin ir($width: 100%){
    display:block;
    overflow:hidden;
    width: px-to-rem($width);
    white-space:nowrap;
    text-indent:200%;
}

//Element 숨김
@mixin hidden{
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    clip:rect(0,0,0,0);
    border: 0
}

//한줄 말줄임
@mixin ellipsis($width: 100%) {
    overflow:hidden;
    display:inline-block;
    max-width:px-to-rem($width);
    text-overflow:ellipsis;
    white-space:nowrap;
}

// 여러줄 말줄임 (padding-top, padding-bottom 사용금지, line-height:px 로 작성)
@mixin ellipsisMulti($line : 2, $lh : 23px , $width: 100%, $size: $text02, $fixH : true) {
    overflow: hidden;
    display: -webkit-box;
    width: $width;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    font-size: $size;
    @if (remove-units($size) == remove-units($text01)){
        line-height: 2.5rem;
    }@else if (remove-units($size) == remove-units($text02)){
        line-height:2.3rem;
    }@else if (remove-units($size) == remove-units($text03)){
        line-height:2.0rem;
        letter-spacing: -0.01em;
    }@else{
        line-height:px-to-rem($lh);
    }
    $size : remove-units($size);
    $line : remove-units($line);
    $lh : remove-units($lh);
    // @warn $size * $lh * $line ;
    @if ($fixH == true){
        height: $line * $lh * 1rem;
    }@else {
        max-height: $line * $lh * 1rem;
    }
}

//center 정렬 (position)
@mixin absCenter{
    position:absolute;
    left:0;
    right:0;
    top:0;
    bottom:0;
    margin: auto;
}

//center 정렬 (Flex)
@mixin flexCenter{
    display:flex;
    justify-content:center;
    align-items:center;
}
@mixin flexBetween{
    display:flex;
    justify-content:space-between;
    align-items:center;
}

//버튼 Solid Type (form /  normal)
@mixin btnSolid($width: 100%, $st: normal){
    display:inline-flex;
    justify-content:center;
    align-items:center;
    width: px-to-rem($width);
    text-align:center;    
    
    & > span{
        display:inline-block;
        font-weight:bold;
    }

    @if ($st == form){
        height:3rem;
        padding:0 1.8rem;
        border-radius:3rem;
        background-color:$kb-ui04;
        & > span{
            font-size: px-to-rem($text03);
            color: $kb-ui11;
        }
    }@else if ($st == normal){
        height:4.4rem;
        border-radius:2px;
        background-color:$color-yellow;
        & > span{
            font-size: px-to-rem($text01);
            color: $kb-ui02;
            font-weight:bold;
        }
    }@else if ($st == sticky){
        height:5.2rem;
        border-radius:2px;
        background-color:$color-yellow;
        & > span{
            font-size: px-to-rem($heading04);
            color: $kb-ui02;
        }
    }

    &.is-disabled,
    &:disabled{
        background-color:$kb-ui08;
        & > span{
            color:$kb-ui06;
        }
    }
}

//버튼 LineType (amount:금액선택, table, form, segemented button : 탭형태)
@mixin btnLine($width: 100%, $height: 44px, $st : normal){
    display:inline-flex;
    justify-content: center;
    align-items:center;
    width: px-to-rem($width);    
    height: px-to-rem($height);
    text-align:center;
    border:1px solid $kb-ui05;
    border-radius:2px;
    background-color:$kb-ui11;    

    & > span{
        display:inline-block;
    }

    @if ($st == amount){
        height: 3.4rem;
        padding:0 0.5rem;
        &.is-selected span{
            color:$kb-ui02;
        }
        & .num{
            font-size:1.3rem;
            font-weight:normal;
        }
        & > span{
            font-size:1.2rem;
            color:$kb-ui03;
        }
        &.is-active{
            border-color:$kb-ui02;
        }
    }@else if($st == form){
        height:3.2rem;
        padding:0 1.8rem;
        border-radius:3.2rem;
        font-size:px-to-rem($text03);
        & > i[class*=icon-]{
            width:20px;
            height:20px;
        }
        & > span{
            font-size:px-to-rem($text03);
            color:$kb-ui03;
        }
    }@else if($st == table){
        min-width:6.4rem;
        height:2.8rem;
        padding: 0 0.8rem;        
        border-color:$kb-ui07;
        & > span{
            font-size:px-to-rem($text03);
            color:$kb-ui02;
        }
    }@else if($st == icon){
        height:3.6rem;
        padding: 0 1.8rem;        
        border-radius:1.8rem;
        border-color:$kb-ui08;
        & > span{
            font-size:px-to-rem($text03);
        }
    }@else{
        padding:0 1rem;
        & > span{
            font-size:px-to-rem($text01);
            color:$kb-ui02;
        }
    }

    &.is-disabled,
    &:disabled{
        border-color:$kb-ui08;
        &>span{
            color:$kb-ui06;
        }
    }
    &:not(.is-disabled):not(:disabled):active{
        border-color:$kb-ui02;
    }

}

//버튼 TEXT
@mixin btnText($width:auto, $size: $text02, $underline: false){
    display:inline-flex;
    width: px-to-rem($width);
    @if($underline == true){
        & > span,
        & > u{text-decoration:underline;}        

        @if($size == $text02){
            color: $kb-ui03;            
        }@else if(remove-units($size) == remove-units($text03)){
            color: $kb-ui04;
        }
    }@else{
        color: $kb-ui04;
    }
    & > span,
    & > u{
        font-size: px-to-rem($size);
    }
}

//버튼 Switch
@mixin btnSwitch($width: 44px, $triggerWidth: 22px, $bgH: 12px, $duration: .1s){
    display:block;
    position:relative;
    width: px-to-rem($width);
    height: px-to-rem($triggerWidth);
    &:before{
        content:'';
        position:absolute;
        left:0;
        right:0;
        top:50%;
        margin-top:-1 * px-to-rem($bgH) / 2;
        height:px-to-rem($bgH);
        border-radius:px-to-rem($bgH);
        background-color:$kb-ui08;
    }
    .trigger{
        @include ir;
        position:absolute;
        top:50%;
        left:0;
        width: px-to-rem($triggerWidth);
        height: px-to-rem($triggerWidth);
        margin-top: -1 * px-to-rem($triggerWidth) / 2;
        border-radius:50%;
        background-color:$kb-ui10;
        box-shadow:0px 6px 6px 0 rgba(0, 0, 0, 0.08);
        transition:left $duration;
    }
    &.is-disabled,
    &:disabled{
        &:before{
            background-color:$kb-ui09;
        }
        .trigger{
            background-color:$kb-ui10;
        }
    }
    &.is-active{
        &:before{
            background-color:#ffe475;
        }
        .trigger{
            left: px-to-rem($width) - px-to-rem($triggerWidth);
            background-color:$color-yellow-positive;
        }
        &.is-disabled,
        &:disabled{
            &:before{
                background-color:#ffedaf;
            }
            .trigger{            
                background-color:#fffbeb;
            }
        }
    }
}

@mixin btnSwitchB($width: 44px, $triggerWidth: 22px, $bgH: 12px, $duration: .1s){
	position: relative;
	display: inline-block;
    height: px-to-rem($triggerWidth);
	input[type=checkbox],
	input[type=radio] {
		position: absolute;
		left: -10000px;
		visibility: hidden;
	}
	label {
		position: relative;
		display: inline-block;
		min-width: px-to-rem($width);
		min-height: px-to-rem($triggerWidth);
		padding-left: px-to-rem($width);
		cursor: pointer;
		span {
			display: inline-block;
			margin-left: 0.8rem;
			font-size: px-to-rem($text03);
			line-height: px-to-rem($triggerWidth);
			color: #484b51;
		}
		&::before,
		&::after {
			content: '';
			position: absolute;
			transition: all $duration;
		}
		&::before {
			left: 0;
			top: 50%;
			margin-top: -1 * px-to-rem($bgH) / 2;
			width: px-to-rem($width);
			height: px-to-rem($bgH);
			border-radius: px-to-rem($bgH);
			background-color: #dde1e4;
		}
		&::after {
			left: 0;
			top: 50%;
			width: px-to-rem($triggerWidth);
			height: px-to-rem($triggerWidth);
			margin-top: -1 * px-to-rem($triggerWidth) / 2;
			border-radius: 50%;
			background-color: #f7f7f8;
			box-shadow: 0px 6px 6px rgba(0,0,0,.08);
		}
	}
	:checked+label {
		&::before {
			background-color: #ffe475;
		}
		&::after {
			left: px-to-rem($triggerWidth);
			background-color: #ffbc00;
		}
	}
	:disabled+label {
		span {
			color: #c6cbd0;
		}
		&::before {
			background-color: #ebeef0;
		}
		&::after {
			background-color: #f7f7f8;
		}
	}
	:checked:disabled+label {
		&::before {
			background-color: #ffedaf;
		}
		&::after {
			background-color: #fffbeb;
		}
	}
	&.label-front {
		label {
			padding-left: 0;
			padding-right: px-to-rem($width);
			span {
                margin-left: 0;
				margin-right: 0.8rem;
			}
			&::before {
				left: auto;
				right: 0;
			}
			&::after {
				left: auto;
				right: px-to-rem($triggerWidth);
			}
		}
		:checked+label {
			&::after {
				left: auto;
				right: 0;
			}
		}
	}
}

//Checkbox (BG 조정필요)
@mixin checkbox($size : 28px, $align: left, $display: inline-block){
    display:$display;
    position:relative;
    min-height: px-to-rem($size);

    input{@include hidden;}
    input + label{display:inline-block;line-height:1.4;min-height:px-to-rem($size);}
    input + label:before{
        content:'';
        position:absolute;
        top:50%;
        left:0;
        transform:translateY(-50%);
        width: px-to-rem($size);
        height: px-to-rem($size);
        background-image:url(../images/common/common.png);
        background-repeat:no-repeat;
        background-size:px-to-rem(162px);
    }

    @if (remove-units($size) == 28 or remove-units($size) == 2.8){
        label{padding-top:0.2rem;padding-left:px-to-rem(38px);font-size:px-to-rem($text01);}
        input + label:before{background-position:0 px-to-rem(-160px)}
        input:checked + label:before{background-position:px-to-rem(-30px) px-to-rem(-160px);}
        input:disabled + label:before{background-position:px-to-rem(-60px) px-to-rem(-160px);}
        input:disabled:checked + label:before{background-position:px-to-rem(-90px) px-to-rem(-160px);}
    }@else if (remove-units($size) == 24 or remove-units($size) == 2.4){
        label{padding-top:0.2rem;padding-left:px-to-rem(32px);font-size:px-to-rem($text02);}
        input + label:before{background-position:0 px-to-rem(-190px);}
        input:checked + label:before{background-position:px-to-rem(-30px) px-to-rem(-190px);}
        input:disabled + label:before{background-position:px-to-rem(-60px) px-to-rem(-190px);}
        input:disabled:checked + label:before{background-position:px-to-rem(-90px) px-to-rem(-190px);}
    }@else if (remove-units($size) == 20 or remove-units($size) == 2){
        label{line-height:px-to-rem($size);font-size:px-to-rem($text02);}
        input + label:before{background-position:0 px-to-rem(-118px);}
        input:checked + label:before{background-position:px-to-rem(-22px) px-to-rem(-118px);}
        // input:disabled + label:before{background-color:$kb-ui10;}
        // input:disabled:checked + label:before{background-color:$color-yellow-negative;}

        @if($align == left){
            label{padding-left:px-to-rem(34px);padding-right:0;}
        }@else if($align == right){
            label{padding-right:px-to-rem(34px);;padding-left:0;}
            input + label:before{left:auto;right:0;}

        }
    }
}

//Radio
@mixin radio($size : 24px, $display: inline-block){
    display:$display;
    position:relative;
    min-height:$size;

    input{@include hidden;}
    label{display:inline-block;min-height:24px;color:$kb-ui04;padding-top:2px;padding-left:32px;font-size:$text02;line-height:1.4;}
    label:before,
    label:after{position:absolute;border-radius:50%;}
    label:before{content:'';top:50%;left:0;transform:translateY(-50%);width:$size;height:$size;background-color:#fff;border:2px solid $kb-ui07;}
    label:after{top:50%;left:$size * 0.25;transform:translateY(-50%);width: $size * 0.5;height: $size * 0.5;background-color:$color-yellow;}
    input:checked + label:before{border-color: $color-yellow;}
    input:checked + label:after{content:'';}
    input:disabled + label:before{border-color: $color-disable;}
    input:disabled:checked + label:after{background-color:$color-disable;}
    input:disabled + label{color:$color-disable;}

}